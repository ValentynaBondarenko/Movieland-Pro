openapi: 3.0.3
info:
  version: 0.0.1
  title: MovieLand
  description: "<p>This service for searching and discovering movies. <p>
    Users can find films of different genres, ratings, and more. They can also rate movies and leave comments. <p>"

servers:
  - url: /api/v1

components:
  schemas:
    ResponseMovie:
      type: object
      properties:
        id:
          type: integer
        nameUkrainian:
          type: string
        nameNative:
          type: string
        yearOfRelease:
          type: integer
          format: int32
        description:
          type: string
        rating:
          type: number
          format: double
        price:
          type: number
          format: double
        poster:
          type: string

    ResponseGenre:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique genre identifier
        name:
          type: string
          description: Genre name
    MovieSortCriteria:
      type: object
      properties:
        ratingDirection:
          type: string
          description: Sort direction for rating (optional).
          enum: [ "ASC", "DESC" ]
        priceDirection:
          type: string
          description: Sort direction for price (optional).
          enum: [ "ASC", "DESC" ]
    ResponseFullMovie:
      type: object
      properties:
        id:
          type: integer
        nameUkrainian:
          type: string
        nameNative:
          type: string
        yearOfRelease:
          type: integer
          format: int32
        description:
          type: string
        rating:
          type: number
          format: double
        price:
          type: number
          format: double
        picturePath:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/ResponseGenre'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/ResponseCountry'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/ResponseReview'
    ResponseCountry:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique country identifier
        name:
          type: string
          description: Country name

    ResponseReview:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique review identifier
        user:
          $ref: '#/components/schemas/ResponseUser'
        text:
          type: string
          description: Review text

    ResponseUser:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique user identifier
        nickname:
          type: string
          description: User's nickname

    ProblemDetails:
      required:
        - detail
        - status
      type: object
      properties:
        type:
          description: |
            A URI reference according to IETF RFC 3986 [5] that identifies the problem type.
            It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced.
            When this member is not present, its value is assumed to be "about:blank".
          type: string
        title:
          type: string
          description: |
            A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem,
            except for purposes of localization. If type is given and other then "about:blank", this attribute shall also be provided.
            A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem,
            except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: |
            The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: |
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced in this structure.
        Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included
        by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19]
        foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular
        implementations, define extensions to define additional attributes that provide more information about the error. The description
        column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description,
        see IETF RFC 7807 [19].
  

  responses:
    BadRequest:
      description: |
        Bad Request If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or
        the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. --- If the
        response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected,
        and the API producer does not support paging for the affected resource, it shall respond with this response code. --- If there is an
        application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API
        producer shall respond with this response code.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    BasicOk:
      description: |
        OK.

        The request has succeeded.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content: { }
    Conflict:
      description: |
        Conflict Another request is in progress that prohibits the fulfilment of the current request, or the
        current resource state is inconsistent with the request.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Forbidden:
      description: |
        Forbidden If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond
        with this response code. The "ProblemDetails" structure shall be provided.  It should include in the "detail" attribute information about
        the source of the problem, and may indicate how to solve it.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    InternalServerError:
      description: |
        Internal Server Error If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP
        response code ("catch all error"), the API producer shall respond withthis response code. The "ProblemDetails" structure shall be provided,
        and shall include in the "detail" attribute more information about the source of the problem.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    MethodNotAllowed:
      description: |
        Method Not Allowed If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this
        response code. The "ProblemDetails" structure may be omitted.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotAcceptable:
      description: |
        Not Acceptable If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer,
        the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted in that case.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: |
        Not Found If the API producer did not find a current representation for the resource addressed by the URI passed in the request, or is not
        willing to disclose that one exists, it shall respond with this response code.  The "ProblemDetails" structure may be provided, including
        in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    RequestedRangeNotSatisfiable:
      description: |
        Requested Range Not Satisfiable This code is returned if the requested byte range in the Range HTTP header is not
        present in the requested resource.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    ServiceUnavailable:
      description: |
        Service Unavailable If the API producer encounters an internal overload situation of itself or of a system it relies on, it should
        respond with this response code, following the provisions in IETF RFC 7231 [13] for the use of the "Retry-After" HTTP header and for the
        alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Unauthorized:
      description: |
        Unauthorized If the request contains no access token even though one is required, or if the request contains an authorization token that
        is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in
        the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    UnprocessableEntity:
      description: |
        Unprocessable Entity If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot
        be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The
        "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.
        NOTE 2: This error response code is only applicable for methods that have a request body.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ProblemDetails'

paths:
  '/movie':
    get:
      description: |
        Get all movies with optional sorting by rating and price.
        
        The GET method finds all movies. You can optionally sort the results by rating (desc) or price (asc/desc).
      summary: Get all movies
      operationId: findAllMovies
      tags:
        - Movie
      parameters:
        - name: movieSortCriteria
          in: query
          description: Sort criteria for movies (optional).
          schema:
            $ref: '#/components/schemas/MovieSortCriteria'
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseMovie'

        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '416':
          $ref: '#/components/responses/RequestedRangeNotSatisfiable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/movie/random':
    get:
      description: |
        Get randome movies .

        The GET method find couple ramdome movies.
      summary: Get random movies
      operationId: getRandomMovies
      tags:
        - Movie
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseMovie'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '416':
          $ref: '#/components/responses/RequestedRangeNotSatisfiable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/movie/genre/{genreId}':
    get:
      description: |
        Get movies by genre.

        The GET method find move by genre.
      summary: Get movies by genre
      operationId: getMoviesByGenre
      tags:
        - Movie
      parameters:
        - name: genreId
          in: path
          required: true
          description: ID of the genre
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseMovie'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '416':
          $ref: '#/components/responses/RequestedRangeNotSatisfiable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/movie/{movieId}':
    get:
      description: |
        Get movie by id.

        The GET method finds one movie by id.
      summary: Get movie
      operationId: getMovieById
      tags:
        - Movie
      parameters:
        - name: movieId
          in: path
          required: true
          description: ID of the movie
          schema:
            type: integer
            format: int32
        - name: currency
          in: query
          required: false
          description: Currency for calculating the price of the movie. Specify the currency code (e.g., USD, EUR) to retrieve the movie price in the selected currency. If not specified, the price will be returned in the default currency (UAH).
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseFullMovie'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '416':
          $ref: '#/components/responses/RequestedRangeNotSatisfiable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/genre':
    get:
      description: |
        Get all genres.

        The GET method finds all genres.
      summary: Get all genres
      operationId: findAllGenres
      tags:
        - Genre
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseGenre'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '416':
          $ref: '#/components/responses/RequestedRangeNotSatisfiable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
